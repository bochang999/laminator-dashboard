name: Build Laminator Dashboard APK (Ephemeral Capacitor)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: '20'
      JAVA_VERSION: '21'          # Capacitor 7 requires JDK 21
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      APP_ID: com.bochang.laminator
      APP_NAME: 'Laminator Dashboard'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Android SDK
        run: |
          mkdir -p "$ANDROID_SDK_ROOT"
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
          curl -fsSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o cmdtools.zip
          unzip -q cmdtools.zip -d "$ANDROID_SDK_ROOT"/cmdline-tools
          mv "$ANDROID_SDK_ROOT"/cmdline-tools/cmdline-tools "$ANDROID_SDK_ROOT"/cmdline-tools/latest
          yes | "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager --licenses
          "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager \
            "platforms;android-35" "build-tools;35.0.0" "platform-tools"

      - name: Install dependencies
        run: npm install

      - name: Detect webDir (robust)
        id: detect
        run: |
          echo "üîç Detecting webDir location with robust method..."
          for d in dist build www public .; do
            if [ -f "$d/index.html" ]; then
              echo "‚úÖ Found index.html in: $d"
              echo "webdir=$d" >> $GITHUB_OUTPUT
              exit 0
            fi
          done
          echo "::error::index.html not found in any expected directory"
          exit 1

      - name: Clean Capacitor Setup (Ephemeral Init)
        run: |
          echo "üßπ Ensuring clean Capacitor initialization state..."
          rm -rf capacitor.config.* android ios electron
          echo "‚úÖ Previous Capacitor artifacts removed"

      - name: Initialize Capacitor (Fresh Start)
        run: |
          echo "‚ö° Fresh Capacitor initialization without config conflicts..."
          echo "üìÇ Using webDir: ${{ steps.detect.outputs.webdir }}"
          
          # Initialize Capacitor with detected webDir
          npx cap init "${{ env.APP_NAME }}" "${{ env.APP_ID }}" --web-dir="${{ steps.detect.outputs.webdir }}"
          
          echo "üîß Adding Android platform..."
          npx cap add android
          
          echo "‚úÖ Capacitor initialization completed successfully"

      - name: Set App Version in Gradle
        env:
          RUN_NUMBER: ${{ github.run_number }}
        run: |
          echo "üìã Setting app version information..."
          # versionName„ÇíGit„Çø„Ç∞„Åã„ÇâË®≠ÂÆö
          VERSION_NAME="v2.16-final"
          # versionCode„ÇíGitHub„ÅÆÂÆüË°åÁï™Âè∑„Å´Ë®≠ÂÆö
          VERSION_CODE=$RUN_NUMBER
          
          echo "üîß Updating build.gradle with version info..."
          sed -i "s/versionName \".*\"/versionName \"$VERSION_NAME\"/" android/app/build.gradle
          sed -i "s/versionCode .*/versionCode $VERSION_CODE/" android/app/build.gradle
          
          echo "‚úÖ versionName set to $VERSION_NAME"
          echo "‚úÖ versionCode set to $VERSION_CODE"

      - name: Sync Capacitor
        run: npx cap sync android

      - name: Configure Android API 35 Settings
        run: |
          echo "üì± Configuring Android for API 35 (VANILLA_ICE_CREAM)..."
          
          # variables.gradle „ÅßAPI 35Ë®≠ÂÆö
          if [ -f android/variables.gradle ]; then
            echo "üîß Updating variables.gradle for API 35..."
            cat > android/variables.gradle <<'EOF'
          ext {
              minSdkVersion = 24
              compileSdkVersion = 35
              targetSdkVersion = 35
              androidxActivityVersion = '1.9.2'
              androidxAppCompatVersion = '1.7.0'
              androidxCoordinatorLayoutVersion = '1.2.0'
              androidxCoreVersion = '1.15.0'
              androidxFragmentVersion = '1.8.4'
              coreSplashScreenVersion = '1.0.1'
              androidxWebkitVersion = '1.12.1'
              junitVersion = '4.13.2'
              androidxJunitVersion = '1.2.1'
              androidxEspressoCoreVersion = '3.6.1'
              cordovaAndroidVersion = '10.1.1'
          }
          EOF
            echo "‚úÖ variables.gradle configured for API 35"
          fi
          
          # build.gradle „ÅÆ Android Gradle Plugin „Éê„Éº„Ç∏„Éß„É≥Ë®≠ÂÆö
          if [ -f android/build.gradle ]; then
            echo "üîß Configuring AGP version for API 35 compatibility..."
            sed -i "s/id 'com.android.application' version '[^']*'/id 'com.android.application' version '8.5.2'/" android/build.gradle
            sed -i "s/id 'com.android.library' version '[^']*'/id 'com.android.library' version '8.5.2'/" android/build.gradle
            echo "‚úÖ AGP configured for API 35 compatibility"
          fi

      - name: Build APK with Enhanced Error Handling
        run: |
          echo "üèóÔ∏è Building APK with Capacitor 7 + API 35..."
          cd android
          
          echo "üßπ Cleaning previous builds..."
          ./gradlew clean
          
          echo "üìã Gradle version info..."
          ./gradlew --version
          
          echo "üî® Building release APK..."
          ./gradlew assembleRelease --stacktrace --info > ../build.log 2>&1 || {
            echo "‚ùå Build failed. Analyzing error log..."
            echo ""
            echo "üîç FIRST 20 LINES:"
            head -20 ../build.log
            echo ""
            echo "üîç ERROR SECTIONS:"
            grep -A 5 -B 5 -i "error\|failed\|exception" ../build.log | head -30
            echo ""
            echo "üîç LAST 20 LINES:"
            tail -20 ../build.log
            exit 1
          }
          
          echo "‚úÖ APK build completed successfully"

      - name: Package and Release APK
        run: |
          echo "üì¶ Searching for built APK files..."
          find android -name "*.apk" -type f || {
            echo "‚ùå No APK files found"
            echo "üìÇ Build outputs structure:"
            find android/app/build -type f 2>/dev/null || echo "Build directory not found"
            exit 1
          }
          
          # APK„Éï„Ç°„Ç§„É´„ÅÆÂ†¥ÊâÄ„ÇíÁâπÂÆö
          APK_PATH=$(find android/app/build/outputs/apk -name "*.apk" | head -1)
          if [ -n "$APK_PATH" ]; then
            TIMESTAMP=$(date +%Y%m%d-%H%M)  
            VERSION="v2.16-capacitor7-${TIMESTAMP}"
            NEW_NAME="LaminatorDashboard-${VERSION}.apk"
            
            echo "‚úÖ Found APK: $APK_PATH"
            echo "üì¶ Renaming to: $NEW_NAME"
            cp "$APK_PATH" "$NEW_NAME"
            
            echo "üìä APK Information:"
            ls -lh "$NEW_NAME"
            
            echo "APK_FILE=$NEW_NAME" >> $GITHUB_ENV
            echo "VERSION_TAG=$VERSION" >> $GITHUB_ENV
          else
            echo "‚ùå APK file not found in expected location"
            exit 1
          fi

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APK_FILE }}
          path: ${{ env.APK_FILE }}

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: Laminator Dashboard ${{ env.VERSION_TAG }}
          files: ${{ env.APK_FILE }}
          body: |
            # Laminator Dashboard ${{ env.VERSION_TAG }}
            
            **Ephemeral Capacitor Build - Stable Release**
            
            ## Installation Instructions
            1. Download the APK file
            2. Enable "Install from Unknown Sources" on your Android device  
            3. Tap the APK file to install
            
            ## Ver.2.16 Features
            - **Time Calculator** - Production time and completion prediction
            - **Film Session Management** - Consumption simulation  
            - **Job Management** - Real-time progress tracking
            - **Report Generation** - Work efficiency analysis
            - **PWA Support** - Offline operation and home screen installation
            
            ## Technical Specifications
            - **Build Method**: Ephemeral Capacitor (CI initialization)
            - **Framework**: Capacitor 7 + Android API 35
            - **Environment**: Node.js 20 + Java 21 + AGP 8.5.2
            - **Compatibility**: Android 7.0+ recommended
            
            ## Technical Improvements
            - **Configuration Conflicts Resolved**: Clean initialization prevents errors
            - **webDir Issues Fixed**: Standardized directory structure
            - **API 35 Support**: Full VANILLA_ICE_CREAM compatibility
            - **Stable Build Process**: Enhanced error handling
            
            ---
            **Auto Build**: GitHub Actions (Ephemeral-Capacitor-Stable)  
            **Build Number**: ${{ github.run_number }}  
            **Build Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}