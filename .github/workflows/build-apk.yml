name: Build Laminator Dashboard APK (Ephemeral Capacitor)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: '20'
      JAVA_VERSION: '21'          # Capacitor 7 requires JDK 21
      APP_ID: com.bochang.laminator
      APP_NAME: 'Laminator Dashboard'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Android SDK Build Tools Path
        run: |
          echo "Setting up Android SDK Build Tools path..."
          BUILD_TOOLS_PATH=$(find $ANDROID_HOME/build-tools -maxdepth 1 | sort -r | head -n 1)
          echo "Found Build Tools at: $BUILD_TOOLS_PATH"
          echo "$BUILD_TOOLS_PATH" >> $GITHUB_PATH
          echo "✅ Android SDK Build-Tools added to PATH."

      - name: Accept Android licenses
        run: yes | sdkmanager --licenses >/dev/null

      - name: Install API 35 components
        run: |
          echo "📱 Installing Android SDK API 35 for Capacitor 7..."
          sdkmanager "platforms;android-35" "build-tools;35.0.0"
          echo "✅ Android SDK components installed successfully"

      - name: Install dependencies
        run: npm install

      - name: 🕵️ Analyze Installed Dependencies
        run: |
          echo "--- NPM Dependency Tree ---"
          npm list
          echo "--- End of NPM Dependency Tree ---"

      - name: Generate App Icons and Splash Screen
        run: npx @capacitor/assets generate --android

      - name: Prepare Web Directory for Capacitor
        run: |
          echo "🧹 Cleaning www directory..."
          rm -rf www
          echo "📦 Rebuilding www directory..."
          mkdir -p www/assets
          cp -r *.html *.css *.js *.json www/ 2>/dev/null || true
          echo "🖼️ Copying master icon into www directory..."
          if [ -f "assets/icon.png" ]; then
            cp assets/icon.png www/assets/icon.png
            echo "✅ Master icon copied to www/assets/"
          else
            echo "⚠️ assets/icon.png not found, using default"
          fi
          if [ -f "assets/splash.png" ]; then
            cp assets/splash.png www/assets/splash.png
            echo "✅ Splash screen copied to www/assets/"
          fi
          echo "✅ Web directory prepared with clean assets"

      - name: Detect webDir (robust)
        id: detect
        run: |
          echo "🔍 Detecting webDir location with robust method..."
          for d in dist build www public; do
            if [ -f "$d/index.html" ]; then
              echo "✅ Found index.html in: $d"
              echo "webdir=$d" >> $GITHUB_OUTPUT
              exit 0
            fi
          done
          echo "::error::index.html not found in any expected directory"
          exit 1

      - name: Clean Capacitor Setup (Ephemeral Init)
        run: |
          echo "🧹 Ensuring clean Capacitor initialization state..."
          rm -rf capacitor.config.* android ios electron
          echo "✅ Previous Capacitor artifacts removed"

      - name: Initialize Capacitor (Fresh Start)
        run: |
          echo "⚡ Fresh Capacitor initialization without config conflicts..."
          echo "📂 Using webDir: ${{ steps.detect.outputs.webdir }}"
          
          # Initialize Capacitor with detected webDir
          npx cap init "${{ env.APP_NAME }}" "${{ env.APP_ID }}" --web-dir="${{ steps.detect.outputs.webdir }}"
          
          echo "🔧 Adding Android platform..."
          npx cap add android
          
          echo "✅ Capacitor initialization completed successfully"

      - name: Sync Capacitor
        run: |
          echo "⚡ Syncing Capacitor..."
          npx cap sync android
          echo "✅ Capacitor sync completed"

      - name: Configure Build Gradle for Command-line Version Injection
        run: |
          echo "🔧 Configuring build.gradle for command-line version injection..."
          
          # build.gradleを恒久的に修正（一度だけ実行する必要がある）
          if [ -f android/app/build.gradle ]; then
            echo "📝 Updating build.gradle to support -P parameter injection..."
            
            # versionCodeとversionNameをコマンドライン注入対応に変更
            sed -i 's/versionCode .*/versionCode project.hasProperty('\''android.injected.versionCode'\'') ? project.property('\''android.injected.versionCode'\'').toInteger() : 1/' android/app/build.gradle
            sed -i 's/versionName .*/versionName project.hasProperty('\''android.injected.versionName'\'') ? project.property('\''android.injected.versionName'\'') : "1.0"/' android/app/build.gradle
            
            echo "✅ build.gradle configured for command-line version injection"
          else
            echo "⚠️ build.gradle not found, skipping configuration"
          fi

      - name: Configure Android API 35 Settings
        run: |
          echo "📱 Configuring Android for API 35 (VANILLA_ICE_CREAM)..."
          
          # variables.gradle でAPI 35設定
          if [ -f android/variables.gradle ]; then
            echo "🔧 Updating variables.gradle for API 35..."
            cat > android/variables.gradle <<'EOF'
          ext {
              minSdkVersion = 24
              compileSdkVersion = 35
              targetSdkVersion = 35
              androidxActivityVersion = '1.9.2'
              androidxAppCompatVersion = '1.7.0'
              androidxCoordinatorLayoutVersion = '1.2.0'
              androidxCoreVersion = '1.15.0'
              androidxFragmentVersion = '1.8.4'
              coreSplashScreenVersion = '1.0.1'
              androidxWebkitVersion = '1.12.1'
              junitVersion = '4.13.2'
              androidxJunitVersion = '1.2.1'
              androidxEspressoCoreVersion = '3.6.1'
              cordovaAndroidVersion = '10.1.1'
          }
          EOF
            echo "✅ variables.gradle configured for API 35"
          fi
          
          # build.gradle の Android Gradle Plugin バージョン設定
          if [ -f android/build.gradle ]; then
            echo "🔧 Configuring AGP version for API 35 compatibility..."
            sed -i "s/id 'com.android.application' version '[^']*'/id 'com.android.application' version '8.5.2'/" android/build.gradle
            sed -i "s/id 'com.android.library' version '[^']*'/id 'com.android.library' version '8.5.2'/" android/build.gradle
            echo "✅ AGP configured for API 35 compatibility"
          fi

      - name: Set Version Information
        run: |
          echo "📋 Setting version information for Ver.7 Simplified System..."
          VERSION_MAJOR="7"
          VERSION_PATCH="${{ github.run_number }}"
          VERSION_TAG="$VERSION_MAJOR.$VERSION_PATCH"
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
          echo "✅ Version tag set to: $VERSION_TAG"

      - name: Pre-Build Cleanup
        run: |
          echo "🧹 Pre-build cleanup..."
          cd android
          ./gradlew clean || echo "Clean skipped (first run)"
          cd ..

      - name: Setup Ver.7 Simplified Keystore (RecipeBox proven method)
        run: |
          echo "🔑 Creating Ver.7 simplified keystore using RecipeBox proven method..."
          cd android
          
          # Use proven RecipeBox signing method for stability
          if [ ! -f "laminator-release.keystore" ]; then
            echo "🔧 Generating Ver.7 simplified release keystore..."
            keytool -genkeypair -v -keystore laminator-release.keystore \
              -alias laminator-key -keyalg RSA -keysize 2048 -validity 10000 \
              -dname "CN=Laminator Dashboard,O=BochangDev,C=JP" \
              -storepass laminator2025 -keypass laminator2025
            echo "✅ Ver.7 simplified keystore created successfully"
          else
            echo "✅ Using existing Ver.7 simplified keystore"
          fi
          
          echo "KEYSTORE_EXISTS=true" >> $GITHUB_ENV
          echo "KEYSTORE_FILE=laminator-release.keystore" >> $GITHUB_ENV
          echo "KEYSTORE_PASSWORD=laminator2025" >> $GITHUB_ENV
          echo "KEY_ALIAS=laminator-key" >> $GITHUB_ENV
          echo "KEY_PASSWORD=laminator2025" >> $GITHUB_ENV
          echo "SIGNING_MODE=ver7-simplified" >> $GITHUB_ENV
          cd ..


      - name: Configure Build Gradle for Ver.7 Simplified Signing
        run: |
          echo "🔧 Configuring build.gradle for Ver.7 simplified signing (RecipeBox method)..."
          
          if [ -f android/app/build.gradle ]; then
            echo "📝 Updating build.gradle for simplified signing system..."
            
            # RecipeBox実証済み署名システム用設定
            cat > android/app/build.gradle.signing << 'GRADLE_EOF'
          android {
              signingConfigs {
                  release {
                      storeFile file('laminator-release.keystore')
                      storePassword 'laminator2025'
                      keyAlias 'laminator-key'
                      keyPassword 'laminator2025'
                  }
              }
              
              buildTypes {
                  release {
                      signingConfig signingConfigs.release
                      minifyEnabled false
                  }
                  debug {
                      signingConfig signingConfigs.release
                  }
              }
          }
          GRADLE_EOF
            
            # 既存のbuild.gradleに署名設定を統合
            if grep -q "signingConfigs" android/app/build.gradle; then
              echo "✅ Signing config already exists in build.gradle"
            else
              echo "📝 Adding signing configuration to build.gradle..."
              # android {ブロック内に署名設定を挿入
              sed -i '/android {/r android/app/build.gradle.signing' android/app/build.gradle
            fi
            
            echo "✅ build.gradle configured for Ver.7 simplified signing"
          else
            echo "⚠️ build.gradle not found, skipping configuration"
          fi

      - name: Build APK with Ver.7 Simplified Signing
        run: |
          echo "🏗️ Building APK with Ver.7 simplified signing system..."
          
          echo "🔨 Building with Gradle directly using simplified method..."
          cd android
          chmod +x gradlew
          
          # シンプルなGradleビルド（RecipeBox実証済み方式）
          ./gradlew assembleRelease \
            -Pandroid.injected.versionName="${{ env.VERSION_TAG }}" \
            -Pandroid.injected.versionCode="${{ github.run_number }}" \
            --no-daemon --stacktrace
          
          cd ..
          
          # APK確認
          if [ -f "android/app/build/outputs/apk/release/app-release.apk" ]; then
              echo "✅ Release APK created successfully"
              APK_SOURCE="android/app/build/outputs/apk/release/app-release.apk"
              BUILD_TYPE="release"
          elif [ -f "android/app/build/outputs/apk/debug/app-debug.apk" ]; then
              echo "✅ Debug APK created successfully"
              APK_SOURCE="android/app/build/outputs/apk/debug/app-debug.apk"
              BUILD_TYPE="debug"
          else
              echo "❌ No APK found"
              find android -name "*.apk" -type f || echo "No APK files found anywhere"
              exit 1
          fi
          
          # 最終APKファイル作成
          FINAL_NAME="lamidash_${{ env.VERSION_TAG }}_simplified.apk"
          cp "$APK_SOURCE" "$FINAL_NAME"
          
          echo "✅ Ver.7 simplified signed APK created: $FINAL_NAME"
          echo "📊 APK Information:"
          ls -lh "$FINAL_NAME"
          
          # APK署名検証
          if command -v apksigner >/dev/null 2>&1; then
            echo "🔐 Verifying APK signature..."
            apksigner verify --verbose "$FINAL_NAME" || echo "⚠️ Signature verification warning"
          fi
          
          echo "APK_FILE=$FINAL_NAME" >> $GITHUB_ENV
          echo "BUILD_TYPE=$BUILD_TYPE" >> $GITHUB_ENV

      - name: 🕵️ Analyze APK Contents
        run: |
          echo "--- Analyzing content of APK file ---"
          APK_FILE=$(find . -name "lamidash_*.apk" | head -n 1)
          if [ -f "$APK_FILE" ]; then
            echo "📊 APK Contents Analysis for: $APK_FILE"
            unzip -l "$APK_FILE"
            echo ""
            echo "📈 Top 20 largest files in APK:"
            unzip -l "$APK_FILE" | sort -k1 -nr | head -n 20
          else
            echo "APK file not found for analysis."
          fi
          echo "--- End of APK Content Analysis ---"

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APK_FILE }}
          path: ${{ env.APK_FILE }}

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: Laminator Dashboard ${{ env.VERSION_TAG }}
          files: ${{ env.APK_FILE }}
          body: |
            # 🎛️ Laminator Dashboard ${{ env.VERSION_TAG }}
            
            **✨ Ver.7 Simplified System** - Back to Reliable Fundamentals
            
            ## 📥 Installation Instructions
            1. ⬇️ Download the APK file
            2. 🔓 Enable "Install from Unknown Sources" on your Android device  
            3. 📱 Tap the APK file to install
            4. 🔄 **Seamless Updates**: Simplified signing for consistent updates
            
            ## 🔧 Ver.7 Simplified System Features
            - 🎯 **Version Simplification**: Clean Ver.7.X numbering system
            - 🔧 **Proven Signing**: RecipeBox-tested keystore method for stability
            - 💾 **Simple Data Storage**: localStorage-focused, minimal Capacitor dependencies
            - ⏰ **Time Calculator** - Production time and completion prediction
            - 🎞️ **Film Session Management** - Consumption tracking  
            - 📋 **Job Management** - Real-time progress tracking
            - 📊 **Report Generation** - Work efficiency analysis
            - 🌐 **PWA Support** - Offline operation capability
            - 📦 **Lightweight Build** - Optimized for stability over complexity
            
            ## 🔧 Technical Specifications
            - **Build Environment**: Node.js ${{ env.NODE_VERSION }} + Java ${{ env.JAVA_VERSION }}
            - **Framework**: Capacitor 7 + Android API 35 (Simplified Configuration)
            - **Build Method**: Proven Signing + Simplified Dependencies
            - **APK Type**: ${{ env.BUILD_TYPE == 'release' && '🔐 Release Signed' || '🔧 Debug Build' }}
            - **Signing Method**: ✅ RecipeBox-Proven Method (Simplified)
            - **Compatibility**: Android 7.0+ recommended
            
            ## 🎯 Design Philosophy: Simplicity & Reliability
            - 🔧 **Less is More**: Reduced complexity for better stability
            - 📚 **Proven Methods**: Using battle-tested approaches from RecipeBox
            - ⚡ **Simplified Storage**: localStorage-first approach for APK compatibility
            - 🔨 **Clean Architecture**: Removed experimental multi-layer systems
            - ✅ **APK-First Design**: Optimized for real device usage, not just web
            - 🏗️ **Maintainable Code**: Reduced dependencies for long-term stability
            - 📐 **User-Focused**: Prioritizing working features over technical complexity
            
            ## 📈 Build Information
            - **Version**: ${{ env.VERSION_TAG }}
            - **Build Number**: ${{ github.run_number }}
            - **Build Type**: ${{ env.BUILD_TYPE }}
            - **Signing Method**: ✅ Ver.7 Simplified (RecipeBox-Proven)
            - **Commit**: ${{ github.sha }}
            
            ## 🎓 Return to Fundamentals
            - **Philosophy Change**: From complex multi-layer to simple & reliable
            - **Proven Foundation**: RecipeBox signing methodology application
            - **APK-Focused**: Optimized for Android device compatibility
            - **Long-term Stability**: Maintainable codebase for sustained development
            
            ---
            🤖 **Auto Build**: GitHub Actions (Ver.7-Simplified)  
            📅 **Build Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')  
            🏆 **Milestone**: Simplified system for enhanced reliability
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}